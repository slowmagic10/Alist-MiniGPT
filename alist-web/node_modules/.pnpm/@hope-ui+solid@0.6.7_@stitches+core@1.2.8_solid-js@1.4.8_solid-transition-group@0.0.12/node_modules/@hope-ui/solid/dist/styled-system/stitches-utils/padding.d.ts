import type { PropertyValue } from "@stitches/core";
export declare const padding: {
    /**
     * The CSS `padding` property
     */
    p: (value: PropertyValue<"padding">) => {
        padding: {
            readonly [$$PropertyValue]: "padding";
        };
    };
    /**
     * The CSS `padding-top` property
     */
    pt: (value: PropertyValue<"paddingTop">) => {
        paddingTop: {
            readonly [$$PropertyValue]: "paddingTop";
        };
    };
    /**
     * The CSS `padding-right` property
     */
    pr: (value: PropertyValue<"paddingRight">) => {
        paddingRight: {
            readonly [$$PropertyValue]: "paddingRight";
        };
    };
    /**
     * The CSS `padding-inline-start` property
     */
    paddingStart: (value: PropertyValue<"paddingInlineStart">) => {
        paddingInlineStart: {
            readonly [$$PropertyValue]: "paddingInlineStart";
        };
    };
    /**
     * The CSS `padding-inline-start` property
     */
    ps: (value: PropertyValue<"paddingInlineStart">) => {
        paddingInlineStart: {
            readonly [$$PropertyValue]: "paddingInlineStart";
        };
    };
    /**
     * The CSS `padding-bottom` property
     */
    pb: (value: PropertyValue<"paddingBottom">) => {
        paddingBottom: {
            readonly [$$PropertyValue]: "paddingBottom";
        };
    };
    /**
     * The CSS `padding-left`  property
     */
    pl: (value: PropertyValue<"paddingLeft">) => {
        paddingLeft: {
            readonly [$$PropertyValue]: "paddingLeft";
        };
    };
    /**
     * The CSS `padding-inline-end` property
     */
    pe: (value: PropertyValue<"paddingInlineEnd">) => {
        paddingInlineEnd: {
            readonly [$$PropertyValue]: "paddingInlineEnd";
        };
    };
    /**
     * The CSS `padding-inline-end` property
     */
    paddingEnd: (value: PropertyValue<"paddingInlineEnd">) => {
        paddingInlineEnd: {
            readonly [$$PropertyValue]: "paddingInlineEnd";
        };
    };
    /**
     * The CSS `padding-inline-start` and `padding-inline-end` property
     */
    px: (value: PropertyValue<"paddingInlineStart">) => {
        paddingInlineStart: {
            readonly [$$PropertyValue]: "paddingInlineStart";
        };
        paddingInlineEnd: {
            readonly [$$PropertyValue]: "paddingInlineStart";
        };
    };
    /**
     * The CSS `padding-top` and `padding-bottom` property
     */
    py: (value: PropertyValue<"paddingTop">) => {
        paddingTop: {
            readonly [$$PropertyValue]: "paddingTop";
        };
        paddingBottom: {
            readonly [$$PropertyValue]: "paddingTop";
        };
    };
};
//# sourceMappingURL=padding.d.ts.map