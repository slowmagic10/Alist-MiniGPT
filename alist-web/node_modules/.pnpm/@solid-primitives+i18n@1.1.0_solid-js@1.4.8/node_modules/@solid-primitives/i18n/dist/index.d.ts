import * as solid_js from 'solid-js';

/**
 * This creates a I18nContext. It's extracted into a function to be able to type the Context
 * before it's even initialized.
 *
 * @param [init={}] {Record<string, Record<string, any>>} - Initial dictionary of languages
 * @param [lang=navigator.language] {string} - The default language fallback to browser language if not set
 */
declare const createI18nContext: (init?: Record<string, Record<string, any>>, lang?: string) => [template: (key: string, params?: Record<string, string> | undefined, defaultValue?: string | undefined) => any, actions: {
    add(lang: string, table: Record<string, any>): void;
    locale: (lang?: string | undefined) => string;
    dict: (lang: string) => Record<string, Record<string, any>>;
}];
declare const I18nContext: solid_js.Context<[template: (key: string, params?: Record<string, string> | undefined, defaultValue?: string | undefined) => any, actions: {
    add(lang: string, table: Record<string, any>): void;
    locale: (lang?: string | undefined) => string;
    dict: (lang: string) => Record<string, Record<string, any>>;
}]>;
declare const useI18n: () => [template: (key: string, params?: Record<string, string> | undefined, defaultValue?: string | undefined) => any, actions: {
    add(lang: string, table: Record<string, any>): void;
    locale: (lang?: string | undefined) => string;
    dict: (lang: string) => Record<string, Record<string, any>>;
}];

export { I18nContext, createI18nContext, useI18n };
