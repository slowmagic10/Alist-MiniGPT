{"version":3,"file":"index.js","sources":["../../src/propTraps.ts","../../src/controlledProps.tsx","../../src/filterProps.ts","../../src/combineProps.ts"],"sourcesContent":["import { $PROXY } from \"solid-js\";\n\nfunction trueFn() {\n  return true;\n}\n\nexport const propTraps: ProxyHandler<{\n  get: (k: string | number | symbol) => any;\n  has: (k: string | number | symbol) => boolean;\n  keys: () => string[];\n}> = {\n  get(_, property, receiver) {\n    if (property === $PROXY) return receiver;\n    return _.get(property);\n  },\n  has(_, property) {\n    return _.has(property);\n  },\n  set: trueFn,\n  deleteProperty: trueFn,\n  getOwnPropertyDescriptor(_, property) {\n    return {\n      configurable: true,\n      enumerable: true,\n      get() {\n        return _.get(property);\n      },\n      set: trueFn,\n      deleteProperty: trueFn\n    };\n  },\n  ownKeys(_) {\n    return _.keys();\n  }\n};\n","import { createMemo, createSignal, For } from \"solid-js\";\nimport type { Accessor, Component, JSX, Setter } from \"solid-js\";\n\nexport type TestPropType = \"boolean\" | \"number\" | \"string\" | \"object\";\n\nexport type TestPropObjectOptions<T> = T[] | Record<string, T> | any;\n\nexport type TestPropOptions<T> = (T extends undefined\n  ? { initialValue?: T }\n  : { initialValue: T }) & {\n  min?: T extends number ? number : undefined;\n  max?: T extends number ? number : undefined;\n  options?: TestPropObjectOptions<T>;\n  type?: TestPropType;\n};\n\nexport type TestPropReturn<T> = [value: Accessor<T>, setValue: Setter<T>, field: Component];\n\nexport type TestPropProps<T> = {\n  name: string;\n  value: Accessor<T>;\n  setValue: Setter<T>;\n  min?: T extends number ? number : undefined;\n  max?: T extends number ? number : undefined;\n};\n\nexport const BoolProp: Component<TestPropProps<boolean>> = props => (\n  <label>\n    <input\n      type=\"checkbox\"\n      name={props.name}\n      checked={props.value()}\n      onChange={ev => props.setValue(ev.currentTarget.checked)}\n    />{\" \"}\n    <span>{props.name}</span>{\" \"}\n  </label>\n);\n\nexport const NumberProp: Component<TestPropProps<number>> = props => (\n  <label>\n    <span>{props.name}</span>{\" \"}\n    <input\n      type=\"number\"\n      name={props.name}\n      min={props.min}\n      max={props.max}\n      value={props.value()}\n      onChange={ev => props.setValue(ev.currentTarget.valueAsNumber)}\n    />{\" \"}\n  </label>\n);\n\nexport const StringProp: Component<TestPropProps<string>> = props => (\n  <label>\n    <span>{props.name}</span>{\" \"}\n    <input\n      type=\"text\"\n      name={props.name}\n      value={props.value()}\n      onChange={ev => props.setValue(ev.currentTarget.value)}\n    />{\" \"}\n  </label>\n);\n\nconst filterEnum = <O extends Record<string, any>>(\n  options: O\n): [key: string, value: number | string][] => {\n  const entries = Object.entries(options);\n  if (Object.keys(options).every(key => key === options[options[key] as keyof O].toString())) {\n    return entries\n      .reduce((items, [key, value]) => {\n        if (!items.includes(key)) {\n          items.push(value);\n        }\n        return items;\n      }, [] as string[])\n      .map(item => [item, options[item]]);\n  }\n  console.log(\":(\");\n  return entries;\n};\n\nexport const SelectProp = <T extends any>(\n  props: TestPropProps<T> & { options: TestPropObjectOptions<T> }\n): JSX.Element => {\n  const options = createMemo<[boolean | number | string, T][]>(() =>\n    Array.isArray(props.options)\n      ? props.options.map((option: any) => [option, option])\n      : filterEnum(props.options)\n  );\n  const initialValue = options().findIndex(([_, value]) => value === props.value());\n  return (\n    <label>\n      <span>{props.name}</span>{\" \"}\n      <select\n        name={props.name}\n        value={initialValue.toString()}\n        onChange={ev => props.setValue(options()[ev.currentTarget.selectedIndex][1] as any)}\n      >\n        <For each={options()} fallback={<option>\"options missing\"</option>}>\n          {([key], index) => <option value={index()}>{key}</option>}\n        </For>\n      </select>{\" \"}\n    </label>\n  );\n};\n\nconst defaultInitialValues: Record<TestPropType & string, boolean | number | string | undefined> = {\n  boolean: false,\n  number: 0,\n  string: \"\",\n  object: undefined\n};\n\n/**\n * creates a getter, a setter and a form control for a single prop\n *\n * @param name {string} The name of the property\n * @param options initialValue or Options object\n *\n * @example ```ts\n * createControlledProp('value', 'test');\n * createControlledProp('page', { initialValue: 7, min: 1, max: 99 });\n * createControlledProp('language', {\n *   initialValue: 'en',\n *   options: ['en', 'de', 'it', 'jp', 'cn', 'xy']\n * });\n * // => { value: Accessor<string>, setValue: Setter<string>, field: Component }\n * ```\n */\nexport function createControlledProp<T extends undefined>(\n  name: string,\n  options?: TestPropOptions<T>\n): TestPropReturn<T>;\nexport function createControlledProp<T = boolean>(\n  name: string,\n  options: TestPropOptions<T> | T\n): TestPropReturn<T>;\nexport function createControlledProp<T = number>(\n  name: string,\n  options: TestPropOptions<T> | T\n): TestPropReturn<T>;\nexport function createControlledProp<T = string>(\n  name: string,\n  options: TestPropOptions<T> | T\n): TestPropReturn<T>;\nexport function createControlledProp<T = any>(\n  name: string,\n  options: TestPropOptions<T>\n): TestPropReturn<T>;\nexport function createControlledProp<T>(\n  name: string,\n  options: T extends undefined\n    ? never\n    : T extends object\n    ? TestPropOptions<T>\n    : TestPropOptions<T> | T\n): TestPropReturn<T>;\nexport function createControlledProp<T>(\n  name: string,\n  options?: TestPropOptions<T> | T\n): TestPropReturn<T> {\n  const initialValue: T | undefined =\n    options == null\n      ? undefined\n      : typeof options !== \"object\"\n      ? (options as T)\n      : ((options as TestPropOptions<T>).initialValue as T | undefined) ??\n        (defaultInitialValues[\n          ((options as TestPropOptions<T>).type as keyof typeof defaultInitialValues | undefined) ??\n            \"object\"\n        ] as T | undefined);\n\n  if (initialValue == null) {\n    throw new Error(`cannot get type for Prop ${name}`);\n  }\n  const propType = (options as TestPropOptions<T>)?.options\n    ? \"object\"\n    : (options as TestPropOptions<T>)?.type ?? (typeof initialValue as TestPropType);\n\n  const [value, setValue] = createSignal<T>(initialValue, { name });\n  return [\n    value as Accessor<T>,\n    setValue as Setter<T>,\n    propType === \"boolean\"\n      ? () => BoolProp({ name, value: value as any, setValue: setValue as Setter<boolean> })\n      : propType === \"number\"\n      ? () => NumberProp({ name, value: value as any, setValue: setValue as Setter<number> })\n      : propType === \"string\"\n      ? () => StringProp({ name, value: value as any, setValue: setValue as Setter<string> })\n      : () =>\n          SelectProp<T>({\n            name,\n            value: value as Accessor<T>,\n            setValue: setValue as Setter<T>,\n            options:\n              (options as TestPropOptions<T>).options ??\n              ([initialValue] as TestPropObjectOptions<T>)\n          })\n  ];\n}\n\nexport type CreateTestProps = <\n  Props extends {\n    [name: string]: boolean | number | string | TestPropOptions<boolean | number | string | object>;\n  }\n>(\n  props: Props\n) => [\n  props: {\n    [name in keyof Props]: Accessor<\n      Props[name] extends object\n        ? Props[name][\"options\"] extends object\n          ? Props[name][\"options\"][keyof Props[name][\"options\"]]\n          : Props[name][\"initialValue\"]\n        : Props[name] extends boolean\n        ? boolean\n        : Props[name]\n    >;\n  } & {\n    [name in keyof Props as `set${Capitalize<name & string>}`]: Setter<\n      Props[name] extends object\n        ? Props[name][\"options\"] extends object\n          ? Props[name][\"options\"][keyof Props[name][\"options\"]]\n          : Props[name][\"initialValue\"]\n        : Props[name] extends boolean\n        ? boolean\n        : Props[name]\n    >;\n  },\n  fields: JSX.Element[]\n];\n\n/**\n * creates reactive props for testing a component\n *\n * @param props {Record<string, TestPropOptions>}\n * @returns ```ts\n * [\n *   props: { [name: string]: Accessor<T>, [setName: string]: Setter<T> }\n *   fields: JSX.Element[]\n * ]\n * ```\n * You get the fields to render the prop controls and getter and setter names derived from the name in `props` based on common practice, i.e. `count` would automatically translate to\n * ```ts\n * { count: Accessor<T>, getCount: Setter<T> }\n * ```\n * @example ```ts\n * const [props, fields] = createControlledProps({\n *   value: { initialValue: '' },\n *   disabled: { initialValue: false },\n *   invalid: { initialValue: false },\n *   type: { initialValue: 'text', options: ['text', 'password', 'email'] }\n * })\n * return <>\n *   <Input {...props} />\n *   {fields}\n * </>\n * ```\n */\nexport const createControlledProps: CreateTestProps = props =>\n  Object.entries(props).reduce(\n    (result, [name, options]) => {\n      const [value, setValue, field] = createControlledProp(name, options as any);\n      result[0][name] = value;\n      result[0][`set${name.slice(0, 1).toUpperCase()}${name.slice(1)}`] = setValue;\n      result[1].push(field({}));\n      return result;\n    },\n    [{} as any, [] as JSX.Element[]]\n  );\n","import { createMemo } from \"solid-js\";\nimport { propTraps } from \"./propTraps\";\n\n/**\n * An alternative primitive to Solid's [splitProps](https://www.solidjs.com/docs/latest/api#splitprops) allowing you to create a new props object with only the property names that match the predicate.\n *\n * The predicate is run for every property read lazily, instead of calculated eagerly like the original splitProps. Any signal accessed within the `predicate` will be tracked, and `predicate` re-executed if changed.\n *\n * @param props The props object to filter.\n * @param predicate A function that returns `true` if the property should be included in the filtered object.\n * @returns A new props object with only the properties that match the predicate.\n *\n * @example\n * ```tsx\n * const dataProps = filterProps(props, key => key.startsWith(\"data-\"));\n * <div {...dataProps} />\n * ```\n */\nexport function filterProps<T>(props: T, predicate: (key: keyof T) => boolean): T {\n  return new Proxy(\n    {\n      get(property: string | number | symbol) {\n        return property in props && predicate(property as keyof T)\n          ? props[property as keyof T]\n          : undefined;\n      },\n      has(property: string | number | symbol) {\n        return property in props && predicate(property as keyof T);\n      },\n      keys() {\n        return Object.keys(props).filter(predicate as (key: string) => boolean);\n      }\n    },\n    propTraps\n  ) as unknown as T;\n}\n\n/**\n * Creates a predicate function that can be used to filter props by the prop name dynamically.\n *\n * The provided {@link predicate} function get's wrapped with a cache layer to prevent unnecessary re-evaluation. If one property is requested multiple times, the predicate function will only be evaluated once.\n *\n * The cache is only cleared when the keys of the props object change. *(when spreading props from a singal)*\n *\n * @param props The props object to filter.\n * @param predicate A function that returns `true` if the property should be included in the filtered object.\n * @returns A cached predicate function that filters the props object.\n *\n * @example\n * ```tsx\n * const predicate = createPropsPredicate(props, key => key.startsWith(\"data-\"));\n * const dataProps = filterProps(props, predicate);\n * <div {...dataProps} />\n * ```\n */\nexport function createPropsPredicate<T>(\n  props: T,\n  predicate: (key: keyof T) => boolean\n): (key: keyof T) => boolean {\n  const cache = createMemo(\n    (): Partial<Record<keyof T, boolean>> => {\n      // track prop names — adding/removing keys to dynamic props will trigger this\n      Object.keys(props);\n      return {};\n    },\n    undefined,\n    { equals: false }\n  );\n  return key => {\n    const cacheRef = cache();\n    const cached = cacheRef[key];\n    if (cached !== undefined) return cached;\n    const v = predicate(key);\n    cacheRef[key] = v;\n    return v;\n  };\n}\n","import { AnyObject, chain } from \"@solid-primitives/utils\";\nimport { JSX, mergeProps, MergeProps } from \"solid-js\";\n\nconst extractCSSregex = /([^:; ]*):\\s*([^;]*)/g;\n\nconst isEventListenerKey = (key: string): boolean =>\n  key[0] === \"o\" &&\n  key[1] === \"n\" &&\n  key.length > 2 &&\n  key[2] !== \":\" &&\n  !key.startsWith(\"oncapture:\");\n\n/**\n * converts inline string styles to object form\n * @example\n * const styles = stringStyleToObject(\"margin: 24px; border: 1px solid #121212\");\n * styles; // { margin: \"24px\", border: \"1px solid #121212\" }\n * */\nexport function stringStyleToObject(style: string): JSX.CSSProperties {\n  const object: Record<string, string> = {};\n  let match: RegExpExecArray | null;\n  while ((match = extractCSSregex.exec(style))) {\n    object[match[1]] = match[2];\n  }\n  return object;\n}\n\n/**\n * Combines two set of styles together. Accepts both string and object styles.\\\n * @example\n * const styles = combineStyle(\"margin: 24px; border: 1px solid #121212\", {\n *   margin: \"2rem\",\n *   padding: \"16px\"\n * });\n * styles; // { margin: \"2rem\", border: \"1px solid #121212\", padding: \"16px\" }\n */\nexport function combineStyle(a: string, b: string): string;\nexport function combineStyle(a: JSX.CSSProperties, b: JSX.CSSProperties): JSX.CSSProperties;\nexport function combineStyle(\n  a: JSX.CSSProperties | string,\n  b: JSX.CSSProperties | string\n): JSX.CSSProperties;\nexport function combineStyle(\n  a: JSX.CSSProperties | string,\n  b: JSX.CSSProperties | string\n): JSX.CSSProperties | string {\n  if (typeof a === \"object\" && typeof b === \"object\") return { ...a, ...b };\n  if (typeof a === \"string\" && typeof b === \"string\") return `${a};${b}`;\n\n  const objA = typeof a === \"object\" ? a : stringStyleToObject(a);\n  const objB = typeof b === \"object\" ? b : stringStyleToObject(b);\n\n  return { ...objA, ...objB };\n}\n\ntype PropsInput = {\n  class?: string;\n  className?: string;\n  classList?: Record<string, boolean | undefined>;\n  style?: JSX.CSSProperties | string;\n  ref?: Element | ((el: any) => void);\n} & AnyObject;\n\n/**\n * A helper that reactively merges multiple props objects together while smartly combining some of Solid's JSX/DOM attributes.\n *\n * Event handlers and refs are chained, class, classNames and styles are combined.\n * For all other props, the last prop object overrides all previous ones. Similarly to {@link mergeProps}\n * @param sources - Multiple sets of props to combine together.\n * @example\n * ```tsx\n * const MyButton: Component<ButtonProps> = props => {\n *    const { buttonProps } = createButton();\n *    const combined = combineProps(props, buttonProps);\n *    return <button {...combined} />\n * }\n * // component consumer can provide button props\n * // they will be combined with those provided by createButton() primitive\n * <MyButton style={{ margin: \"24px\" }} />\n * ```\n */\nexport function combineProps<T extends [PropsInput, ...PropsInput[]]>(\n  ...sources: T\n): MergeProps<T> {\n  if (sources.length === 1) return sources[0] as MergeProps<T>;\n\n  const merge = mergeProps(...sources) as unknown as MergeProps<T>;\n\n  const reduce = <K extends keyof PropsInput>(\n    key: K,\n    calc: (a: NonNullable<PropsInput[K]>, b: NonNullable<PropsInput[K]>) => PropsInput[K]\n  ) => {\n    let v: PropsInput[K] = undefined;\n    for (const props of sources) {\n      const propV = props[key];\n      if (!v) v = propV;\n      else if (propV) v = calc(v, propV);\n    }\n    return v;\n  };\n\n  // create a map of event listeners to be chained\n  const listeners: Record<string, ((...args: any[]) => void)[]> = {};\n\n  for (const props of sources) {\n    for (const key in props) {\n      if (!isEventListenerKey(key)) continue;\n\n      const v = props[key];\n      const name = key.toLowerCase();\n\n      let callback: (...args: any[]) => void;\n      if (typeof v === \"function\") callback = v;\n      // jsx event listeners also accept a tuple [handler, arg]\n      else if (Array.isArray(v)) {\n        if (v.length === 1) callback = v[0];\n        else callback = v[0].bind(void 0, v[1]);\n      } else {\n        delete listeners[name];\n        continue;\n      }\n\n      const callbacks = listeners[name];\n      if (!callbacks) listeners[name] = [callback];\n      else callbacks.push(callback);\n    }\n  }\n\n  return new Proxy(merge, {\n    get(target, key) {\n      if (typeof key !== \"string\") return Reflect.get(target, key);\n\n      // Combine style prop\n      if (key === \"style\") return reduce(\"style\", combineStyle);\n\n      // chain props.ref assignments\n      if (key === \"ref\") {\n        const callbacks: ((el: any) => void)[] = [];\n        for (const props of sources) {\n          const cb = props[key] as ((el: any) => void) | undefined;\n          if (typeof cb === \"function\") callbacks.push(cb);\n        }\n        return chain(callbacks);\n      }\n\n      // Chain event listeners\n      if (isEventListenerKey(key)) {\n        const callbacks = listeners[key.toLowerCase()];\n        return Array.isArray(callbacks) ? chain(callbacks) : Reflect.get(target, key);\n      }\n\n      // Merge classes or classNames\n      if (key === \"class\" || key === \"className\") return reduce(key, (a, b) => `${a} ${b}`);\n\n      // Merge classList objects, keys in the last object overrides all previous ones.\n      if (key === \"classList\") return reduce(key, (a, b) => ({ ...a, ...b }));\n\n      return Reflect.get(target, key);\n    }\n  });\n}\n\n// const com = combineProps(\n//   {\n//     onSomething: 123,\n//     onWheel: (e: WheelEvent) => 213,\n//     something: \"foo\",\n//     style: { margin: \"24px\" },\n//     once: true,\n//     onMount: (fn: VoidFunction) => undefined\n//   },\n//   {\n//     onSomething: [(n: number, s: string) => \"fo\", 123],\n//     once: \"ovv\"\n//   },\n//   {\n//     onWheel: false,\n//     onMount: (n: number) => void 0\n//   }\n// );\n// com.onSomething; // (s: string) => void;\n// com.once; // string;\n// com.onWheel; // false;\n// com.onMount; // ((fn: VoidFunction) => undefined) & ((n: number) => undefined);\n// com.something; // string;\n// com.style; // string | JSX.CSSProperties;\n"],"names":["trueFn","propTraps","get","_","property","receiver","$PROXY","has","set","deleteProperty","getOwnPropertyDescriptor","configurable","enumerable","ownKeys","keys","BoolProp","props","ev","setValue","currentTarget","checked","_$insert","name","_$effect","value","NumberProp","valueAsNumber","min","max","_$setAttribute","StringProp","filterEnum","options","entries","Object","every","key","toString","reduce","items","includes","push","map","item","console","log","SelectProp","createMemo","Array","isArray","option","initialValue","findIndex","selectedIndex","_$createComponent","index","defaultInitialValues","boolean","number","string","object","undefined","createControlledProp","type","Error","propType","createSignal","createControlledProps","result","field","slice","toUpperCase","filterProps","predicate","Proxy","filter","createPropsPredicate","cache","equals","cacheRef","cached","v","extractCSSregex","isEventListenerKey","length","startsWith","stringStyleToObject","style","match","exec","combineStyle","a","b","objA","objB","combineProps","sources","merge","mergeProps","calc","propV","listeners","toLowerCase","callback","bind","callbacks","target","Reflect","cb","chain"],"mappings":"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"}