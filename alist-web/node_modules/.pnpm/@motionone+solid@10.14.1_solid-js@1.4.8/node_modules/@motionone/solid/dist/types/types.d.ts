import type { JSX, ParentProps } from "solid-js";
import type { ValueKeyframesDefinition, MotionKeyframesDefinition, InViewOptions } from "@motionone/dom";
import type { MotionEvent, CustomPointerEvent, ViewEvent } from "@motionone/dom";
import { AnimationOptions } from "@motionone/types";
export interface MotionEventHandlers {
    onMotionStart?: (event: MotionEvent) => void;
    onMotionComplete?: (event: MotionEvent) => void;
    onHoverStart?: (event: CustomPointerEvent) => void;
    onHoverEnd?: (event: CustomPointerEvent) => void;
    onPressStart?: (event: CustomPointerEvent) => void;
    onPressEnd?: (event: CustomPointerEvent) => void;
    onViewEnter?: (event: ViewEvent) => void;
    onViewLeave?: (event: ViewEvent) => void;
}
export declare type SolidCSSPropertyKeys = Exclude<keyof {
    [K in keyof JSX.CSSProperties as string extends K ? never : K]: never;
}, "transition">;
export declare type KeyframesDefinition = MotionKeyframesDefinition & {
    [K in SolidCSSPropertyKeys]?: ValueKeyframesDefinition;
};
export declare type Variant = KeyframesDefinition & {
    transition?: AnimationOptionsWithOverrides;
};
export declare type VariantDefinition = string | Variant;
export declare type AnimationOptionsWithOverrides = AnimationOptions & {
    [K in keyof KeyframesDefinition]: AnimationOptions;
};
export declare type Options = {
    initial?: false | VariantDefinition;
    animate?: VariantDefinition;
    inView?: VariantDefinition;
    hover?: VariantDefinition;
    press?: VariantDefinition;
    exit?: VariantDefinition;
    variants?: Record<string, Variant>;
    inViewOptions?: InViewOptions;
    transition?: AnimationOptionsWithOverrides;
};
export declare type MotionComponentProps = ParentProps<MotionEventHandlers & Options>;
export declare type MotionComponent = {
    (props: JSX.IntrinsicElements["div"] & MotionComponentProps): JSX.Element;
    <T extends keyof JSX.IntrinsicElements>(props: JSX.IntrinsicElements[T] & MotionComponentProps & {
        tag: T;
    }): JSX.Element;
};
export declare type MotionProxyComponent<T> = (props: T & MotionComponentProps) => JSX.Element;
export declare type MotionProxy = MotionComponent & {
    [K in keyof JSX.IntrinsicElements]: MotionProxyComponent<JSX.IntrinsicElements[K]>;
};
declare module "solid-js" {
    namespace JSX {
        interface Directives {
            motion: Options;
        }
    }
}
export declare type E = JSX.Element;
